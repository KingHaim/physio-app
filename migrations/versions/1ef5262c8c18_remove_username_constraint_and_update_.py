"""Remove username constraint and update field lengths

Revision ID: 1ef5262c8c18
Revises: add_fiscal_fields_only
Create Date: 2025-06-23 01:25:01.183465

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '1ef5262c8c18'
down_revision = 'add_fiscal_fields_only'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if the foreign key constraint already exists
    connection = op.get_bind()
    result = connection.execute(text("""
        SELECT COUNT(*) FROM information_schema.table_constraints 
        WHERE constraint_name = 'fk_portal_user_id_user' 
        AND table_name = 'patient'
    """))
    constraint_exists = result.scalar() > 0
    
    # Check if the index already exists
    index_result = connection.execute(text("""
        SELECT COUNT(*) FROM pg_indexes 
        WHERE indexname = 'ix_treatment_calendly_invitee_uri'
    """))
    index_exists = index_result.scalar() > 0
    
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        # Only create the constraint if it doesn't exist
        if not constraint_exists:
            batch_op.create_foreign_key('fk_portal_user_id_user', 'user', ['portal_user_id'], ['id'], use_alter=True)

    with op.batch_alter_table('security_log', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('treatment', schema=None) as batch_op:
        batch_op.alter_column('treatment_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('provider',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('movement_restriction',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('visit_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('calendly_invitee_uri',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        # Only create the index if it doesn't exist
        if not index_exists:
            batch_op.create_index(batch_op.f('ix_treatment_calendly_invitee_uri'), ['calendly_invitee_uri'], unique=False)

    with op.batch_alter_table('unmatched_calendly_booking', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('license_number',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('clinic_address',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('clinic_phone',
               existing_type=sa.TEXT(),
               type_=sa.String(length=30),
               existing_nullable=True)
        batch_op.alter_column('clinic_email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('clinic_website',
               existing_type=sa.TEXT(),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('stripe_customer_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('calendly_api_key',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('calendly_user_uri',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('language',
               existing_type=sa.TEXT(),
               type_=sa.String(length=5),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('ix_user_username'))

    with op.batch_alter_table('user_consent', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('user_consent', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)
        batch_op.alter_column('language',
               existing_type=sa.String(length=5),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('calendly_user_uri',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('calendly_api_key',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('stripe_customer_id',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('clinic_website',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('clinic_email',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('clinic_phone',
               existing_type=sa.String(length=30),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('clinic_address',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('license_number',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('unmatched_calendly_booking', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('treatment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_treatment_calendly_invitee_uri'))
        batch_op.alter_column('calendly_invitee_uri',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('visit_type',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('movement_restriction',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('provider',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('treatment_type',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('security_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.drop_constraint('fk_portal_user_id_user', type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('phone',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)

    # ### end Alembic commands ###
