"""Initial migration

Revision ID: 59a72b621d40
Revises: 
Create Date: 2025-06-18 10:38:23.269109

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59a72b621d40'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('price_cents', sa.Integer(), nullable=False),
    sa.Column('billing_interval', sa.String(length=50), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('patient_limit', sa.Integer(), nullable=True),
    sa.Column('practitioner_limit', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('slug'),
    sa.UniqueConstraint('stripe_price_id')
    )
    op.create_table('security_breach',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('breach_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('affected_users', sa.Integer(), nullable=False),
    sa.Column('detected_at', sa.DateTime(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_details', sa.Text(), nullable=True),
    sa.Column('notification_sent', sa.Boolean(), nullable=True),
    sa.Column('notification_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(length=16), nullable=True),
    sa.Column('license_number', sa.String(length=32), nullable=True),
    sa.Column('clinic_name', sa.String(length=150), nullable=True),
    sa.Column('clinic_address', sa.String(length=200), nullable=True),
    sa.Column('clinic_phone', sa.String(length=30), nullable=True),
    sa.Column('clinic_email', sa.String(length=120), nullable=True),
    sa.Column('clinic_website', sa.String(length=120), nullable=True),
    sa.Column('clinic_description', sa.Text(), nullable=True),
    sa.Column('contribution_base', sa.Float(), nullable=True),
    sa.Column('clinic_first_session_fee', sa.Float(), nullable=True),
    sa.Column('clinic_subsequent_session_fee', sa.Float(), nullable=True),
    sa.Column('clinic_percentage_agreement', sa.Boolean(), nullable=True),
    sa.Column('clinic_percentage_amount', sa.Float(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('calendly_api_key', sa.String(length=255), nullable=True),
    sa.Column('calendly_user_uri', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_stripe_customer_id'), ['stripe_customer_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('data_processing_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('data_categories', sa.String(length=200), nullable=False),
    sa.Column('purpose', sa.String(length=200), nullable=False),
    sa.Column('retention_period', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fixed_cost',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=False),
    sa.Column('monthly_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portal_user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('contact', sa.String(length=100), nullable=True),
    sa.Column('diagnosis', sa.String(length=200), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address_line1', sa.String(length=100), nullable=True),
    sa.Column('address_line2', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('preferred_location', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['portal_user_id'], ['user.id'], name='fk_portal_user_id_user', use_alter=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portal_user_id')
    )
    op.create_table('practice_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('security_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('trial_starts_at', sa.DateTime(), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('current_period_starts_at', sa.DateTime(), nullable=True),
    sa.Column('current_period_ends_at', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_subscriptions_stripe_subscription_id'), ['stripe_subscription_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_subscriptions_user_id'), ['user_id'], unique=False)

    op.create_table('patient_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('generated_date', sa.DateTime(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recurring_appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('recurrence_type', sa.String(length=50), nullable=False),
    sa.Column('time_of_day', sa.Time(), nullable=False),
    sa.Column('treatment_type', sa.String(length=150), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=True),
    sa.Column('fee_charged', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('treatment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('treatment_type', sa.String(length=100), nullable=False),
    sa.Column('assessment', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('provider', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('body_chart_url', sa.String(length=255), nullable=True),
    sa.Column('pain_level', sa.Integer(), nullable=True),
    sa.Column('movement_restriction', sa.String(length=50), nullable=True),
    sa.Column('evaluation_data', sa.JSON(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('visit_type', sa.String(length=50), nullable=True),
    sa.Column('fee_charged', sa.Float(), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('calendly_invitee_uri', sa.String(length=255), nullable=True),
    sa.Column('clinic_share', sa.Float(), nullable=True),
    sa.Column('therapist_share', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('treatment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_treatment_calendly_invitee_uri'), ['calendly_invitee_uri'], unique=True)

    op.create_table('unmatched_calendly_booking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('calendly_invitee_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('matched_patient_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['matched_patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_consent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('purpose', sa.String(length=50), nullable=False),
    sa.Column('given_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trigger_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('treatment_id', sa.Integer(), nullable=False),
    sa.Column('location_x', sa.Float(), nullable=False),
    sa.Column('location_y', sa.Float(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('muscle', sa.String(length=100), nullable=True),
    sa.Column('intensity', sa.Integer(), nullable=True),
    sa.Column('symptoms', sa.Text(), nullable=True),
    sa.Column('referral_pattern', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['treatment_id'], ['treatment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trigger_point')
    op.drop_table('user_consent')
    op.drop_table('unmatched_calendly_booking')
    with op.batch_alter_table('treatment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_treatment_calendly_invitee_uri'))

    op.drop_table('treatment')
    op.drop_table('recurring_appointment')
    op.drop_table('patient_reports')
    with op.batch_alter_table('user_subscriptions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_subscriptions_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_subscriptions_stripe_subscription_id'))

    op.drop_table('user_subscriptions')
    op.drop_table('security_log')
    op.drop_table('practice_reports')
    op.drop_table('patient')
    op.drop_table('fixed_cost')
    op.drop_table('data_processing_activity')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_stripe_customer_id'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('security_breach')
    op.drop_table('plans')
    # ### end Alembic commands ###
